name: Build

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      os:
        required: true
        type: string
      buildArgs:
        required: true
        type: string
      artifactName:
        required: true
        type: string
      artifactPath:
        required: true
        type: string
      ref:
        required: true
        type: string
      fetch-depth:
        required: true
        type: number
      token:
        required: true
        type: string

env:
  HAXE_VERSION: 4.3.6
  PROJECT_NAME: Funkin

jobs:
  build:
    name: Build
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
              ref: ${{ github.head_ref }}
              fetch-depth: 0
              token: ${{ secrets.PAT_TOKEN }}

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: Install libVLC
        if: contains(inputs.name, 'Linux')
        run: sudo apt install libvlc-dev libvlccore-dev

      - name: Install Libraries
        run: |
          haxelib install hmm --quiet
          haxelib run hmm install --quiet
      
      - name: Get Submodules
        run: |
          git submodule update --init --recursive

      - name: Compile
        run: haxelib run lime build ${{ inputs.buildArgs }}

      - name: Commit files
        run: |
          cd /home/runner/work/Funkin/Funkin/export/release/html5/bin
          git config --local user.email "test@test.com"
          git config --local user.name "Test"
          git commit -a -m "Add changes"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          repository: ant6723/fnf
          force: true

      - name: idk
        if: inputs.name == 'HTML5'
        run: |
          cd export/release/html5/bin
          zip -r ${{ env.PROJECT_NAME }}.zip /home/runner/work/Funkin/Funkin/export/release/html5/bin

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: ${{ inputs.artifactName }}
          path: ${{ inputs.artifactPath }}
          if-no-files-found: error
